<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>win11安装</title>
      <link href="/2024/05/18/win/"/>
      <url>/2024/05/18/win/</url>
      
        <content type="html"><![CDATA[<h1 id="windons的安装"><a href="#windons的安装" class="headerlink" title="windons的安装"></a>windons的安装</h1><h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><p>首先我们需要准备一个u盘内存最好在<code>16G</code>以上，在安装期间u盘会<code>格式化</code>，我们需要将u盘的重要文件给拷贝一份以防不必要的损失<br>其次我们需要一台电脑下载微软官方系统的安装工具，进入下面这个链接：<br><a href="https://www.microsoft.com/zh-cn/software-download/windows11"><code>微软win11下载</code></a></p><p><img src="https://picimg.tanshao.cc/win/PixPin1.png" alt="图片"></p><p>下载完成后，我们安装进u盘</p><p><img src="https://picimg.tanshao.cc/win/PixPin2.png" alt="图片"><br><img src="https://picimg.tanshao.cc/win/PixPin3.png" alt="图片"><br><img src="https://picimg.tanshao.cc/win/PixPin4.png" alt="图片"></p><h2 id="电脑设置开机启动u盘"><a href="#电脑设置开机启动u盘" class="headerlink" title="电脑设置开机启动u盘"></a>电脑设置开机启动u盘</h2><p>我们将制作好的u盘插入电脑，电脑一般开机由硬盘启动，我们将它改为u盘启动才会执行u盘中的安装程序。</p><h3 id="设置方式"><a href="#设置方式" class="headerlink" title="设置方式"></a>设置方式</h3><ol><li>开机启动热键选择u盘启动<br><img src="https://picimg.tanshao.cc/win/PixPin5.png" alt="图片"><br>进入后，我们选择<code>UEFI</code>开头的u盘启动</li><li>主板bios设置u盘为第一启动项<br>按下开机键后不停点击键盘del键，进入主板bios界面<br><img src="https://picimg.tanshao.cc/win/PixPin6.png" alt="图片"><br>我们可以在界面上找到<code>Boot Priority</code> 的字母，它的意思是<code>启用优先设置</code><br>再找到<code>UEFI</code>开头的u盘，将鼠标放上图标即可查看，将u盘图标拖动到<code>Boot Priority</code>下。<br>如果不能拖动，我们点击高级设置，进入<code>Settings</code>找到启动，在启动选项1中选择<code>UEFI</code>开头的u盘，退出bios就会显示第一启动项为u盘<br><img src="https://picimg.tanshao.cc/win/PixPin7.png" alt="图片"><h2 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h2><img src="https://picimg.tanshao.cc/win/PixPin8.png" alt="图片"><br><img src="https://picimg.tanshao.cc/win/PixPin9.png" alt="图片"><br>如果显示win11无法安装，那是因为win11安装的要求电脑不符合，但我们可以用另一种，我们<code>Shift+F10</code>调出命令符输入<code>regedit</code>打开注册表<br><img src="https://picimg.tanshao.cc/win/PixPin10.png" alt="图片"><br>我们在Setup文件夹下新建文件夹名字为<code>LabConfig</code>注意大小写，在<code>LabConfig</code>中创建两个word值，我们需要选择32位<br><img src="https://picimg.tanshao.cc/win/PixPin11.png" alt="图片"><br><img src="https://picimg.tanshao.cc/win/PixPin12.png" alt="图片"><br>第一个word我们输入<code>BypassTPMCheck</code>,输入完成后，我们点击<code>BypassTPMCheck</code>输入<code>00000001</code><br>第二个word我们输入<code>BypassSecureBootCheck</code>,输入完成后，我们点击<code>BypassSecureBootCheck</code>输入<code>00000001</code>。<br>关闭注册表和命令符，返回上一选项，再次点击下一页，最后，如果显示有其他系统，会看到很多分区，我们删除各个分区使其变为一块新硬盘。<br>我们需要一个全新的C盘装系统，我们选择新建，在大小这里输入新建磁盘空间，<br>点击应用会出现3个分区前两个分区为系统保留分区，第三个是主分区也就是C盘，我们选择主分区，点击下一页，系统会自动安装等待即可，安装完成后电脑就自动重启，接下来就可以设置系统的时区。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推软件</title>
      <link href="/2024/05/16/software01/"/>
      <url>/2024/05/16/software01/</url>
      
        <content type="html"><![CDATA[<h1 id="PixPin"><a href="#PixPin" class="headerlink" title="PixPin"></a>PixPin</h1><p>我们再剪切图片的时候一般用的是电脑自带的剪切软件，或者是用QQ和微信<br>今天我推荐一款软件<code>PixPin</code>,它的特点比其他截图软件多长截图和文字识别以及Gif的录制与制作，但缺点也很明显就是不成熟，需要自己摸索。<br>下载链接<a href="https://pixpinapp.com/"><code>PixPin</code></a></p><h1 id="Snipaste"><a href="#Snipaste" class="headerlink" title="Snipaste"></a>Snipaste</h1><p>这个软件历经多个迭代，已经成型，当然和上面的<code>PixPin</code>对比缺少长截图，但紧接着因为这个软件已经成型所以我们可以根据它的<a href="&quot;https://docs.snipaste.com/zh-cn/&quot;"><code>用户手册</code></a>来知道如何使用这也是<code>PixPin</code>弊端<br>下载链接<a href="https://zh.snipaste.com/"><code>Snipaste</code></a></p>]]></content>
      
      
      <categories>
          
          <category> 每日一推 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL总结</title>
      <link href="/2024/05/10/MySQL/"/>
      <url>/2024/05/10/MySQL/</url>
      
        <content type="html"><![CDATA[<h1 id="1-基础篇"><a href="#1-基础篇" class="headerlink" title="1.基础篇"></a>1.基础篇</h1><h2 id="1-1-通用语法以及分类"><a href="#1-1-通用语法以及分类" class="headerlink" title="1.1 通用语法以及分类"></a>1.1 通用语法以及分类</h2><ul><li>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</li><li>DML: 数据操作语言，用来对数据库表中的数据进行增删改</li><li>DQL: 数据查询语言，用来查询数据库中表的记录</li></ul><h3 id="DDL（数据定义语言）"><a href="#DDL（数据定义语言）" class="headerlink" title="DDL（数据定义语言）"></a>DDL（数据定义语言）</h3><h4 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h4><p>查询所有数据库：<br><code>SHOW DATABASES;</code><br>查询当前数据库：<br><code>SELECT DATABASE();</code><br>创建数据库：<br><code>CREATE DATABASE [ IF NOT EXISTS ] 数据库名 [ DEFAULT CHARSET 字符集] [COLLATE 排序规则 ];</code><br>删除数据库：<br><code>DROP DATABASE [ IF EXISTS ] 数据库名;</code><br>使用数据库：<br><code>USE 数据库名;</code></p><h4 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h4><p>查询当前数据库所有表：<br><code>SHOW TABLES;</code><br>查询表结构：<br><code>DESC 表名;</code><br>查询指定表的建表语句：<br><code>SHOW CREATE TABLE 表名;</code></p><p>创建表:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE 表名(</span><br><span class="line">    字段1 字段1类型 [COMMENT 字段1注释],</span><br><span class="line">    ...</span><br><span class="line">    字段n 字段n类型 [COMMENT 字段n注释]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>删除字段：<br><code>ALTER TABLE 表名 DROP 字段名;</code></p><p>修改表名：<br><code>ALTER TABLE 表名 RENAME TO 新表名</code></p><p>删除表：<br><code>DROP TABLE [IF EXISTS] 表名;</code><br>删除表，并重新创建该表：<br><code>TRUNCATE TABLE 表名;</code></p><h3 id="DDL（数据库操作语言）"><a href="#DDL（数据库操作语言）" class="headerlink" title="DDL（数据库操作语言）"></a>DDL（数据库操作语言）</h3><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><p>指定字段：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...);</code><br>全部字段：<br><code>INSERT INTO 表名 VALUES (值1, 值2, ...);</code><br>批量添加数据：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code><br><code>INSERT INTO 表名 VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code></p><h4 id="更新和删除数据"><a href="#更新和删除数据" class="headerlink" title="更新和删除数据"></a>更新和删除数据</h4><p>修改数据：<br><code>UPDATE 表名 SET 字段名1 = 值1, 字段名2 = 值2, ... [ WHERE 条件 ];</code><br>删除数据：<br><code>DELETE FROM 表名 [ WHERE 条件 ];</code></p><h3 id="DQL（数据查询语言）"><a href="#DQL（数据查询语言）" class="headerlink" title="DQL（数据查询语言）"></a>DQL（数据查询语言）</h3><h4 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h4><p>查询多个字段：<br><code>SELECT 字段1, 字段2, 字段3, ... FROM 表名;</code><br><code>SELECT * FROM 表名;</code></p><p>设置别名：<br><code>SELECT 字段1 [ AS 别名1 ], 字段2 [ AS 别名2 ], 字段3 [ AS 别名3 ], ... FROM 表名;</code><br><code>SELECT 字段1 [ 别名1 ], 字段2 [ 别名2 ], 字段3 [ 别名3 ], ... FROM 表名;</code></p><p>去除重复记录：<br><code>SELECT DISTINCT 字段列表 FROM 表名;</code></p><p>转义：<br><code>SELECT * FROM 表名 WHERE name LIKE &#39;/_张三&#39; ESCAPE &#39;/&#39;</code></p><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 WHERE 条件列表;</code></p><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 [ WHERE 条件 ] GROUP BY 分组字段名 [ HAVING 分组后的过滤条件 ];</code></p><p>where 和 having 的区别：</p><ul><li>执行时机不同：where 是分组之前进行过滤，不满足 where 条件不参与分组；having 是分组后对结果进行过滤。</li><li>判断条件不同：where 不能对聚合函数进行判断，而 having 可以。</li></ul><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1, 字段2 排序方式2;</code><br>排序方式：</p><ul><li>ASC: 升序（默认）</li><li>DESC: 降序</li></ul><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询第一页数据，展示10条</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee LIMIT <span class="number">0</span>, <span class="number">10</span>;</span><br><span class="line"><span class="comment">-- 查询第二页，展示10条</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee LIMIT <span class="number">10</span>, <span class="number">10</span>;</span><br><span class="line"><span class="comment">-- 查询第N页，展示10条</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee LIMIT (n<span class="number">-1</span>)<span class="number">0</span>, <span class="number">10</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的emoji</title>
      <link href="/2024/05/10/emoji/"/>
      <url>/2024/05/10/emoji/</url>
      
        <content type="html"><![CDATA[<h1 id="小图标合集"><a href="#小图标合集" class="headerlink" title="小图标合集"></a>小图标合集</h1><div class="tabs" id="标签"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="标签-1">表情</button><button type="button" class="tab " data-href="标签-2">动物</button><button type="button" class="tab " data-href="标签-3">天气和天空</button></ul><div class="tab-contents"><div class="tab-item-content active" id="标签-1"><p>😀😁😂🤣😃😄😅😆😉😊😋😎😍😘🥰😗😙😚🙂🤗🤩🤔<br>🤨😐😑😶🙄😏😣😥😮🤐😯😪😫🥱😴😌😛😜😝🤤😒😓😔😕<br>🙃🤑😲🙁😖😞😟😤😢😭😦😧😨😩🤯😬😰😱🥵🥶😳 🤪😵🥴😠😡🤬😷🤒🤕🤢🤮🤧😇🥳🥺🤡🤠🤥🤫🤭🧐<br>🤓😈👿👹👺</p></div><div class="tab-item-content" id="标签-2"><p>😺😸😹😻😼😽🙀😿😾🙈🙉🙊🐵🐶🐺🐱🦁🐯🦒🦊🦝🐮🐷🐗🐭🐹<br>🐰🐻🐨🐼🐸🦓🐴🦄🐔🐲🐽🐾🐒🦍🦧🦮🐕‍🦺🐩🐕🐈🐅🐆🐎🦌<br>🦏🦛🐂🐃🐄🐖🐏🐑🐐🐪🐫🦙🦘🦥🦨🦡🐘🐁🐀🦔🐇🐿🦎<br>🐊🐢🐍🐉🦕🦖🦦🦈🐬🐳🐋🐟🐠🐡🦐🦑🐙🦞🦀🐚🦆🐓🦃🦅<br>🦢🦜🦩🦚🦉🐦🐧🐥🐤🐣🦇🦋🐌🐛🦟🦗🐜🐝🐞🦂🕷</p></div><div class="tab-item-content" id="标签-3"><p>🌑🌒🌓🌔🌕🌖🌗🌘<br>🌙🌚🌛🌜☀️🌝🌞🪐<br>⭐🌟🌠🌌☁️⛅⛈️🌤️<br>🌥️🌦️🌧️🌨️🌩️🌪️🌫️🌬️<br>🌀🌈🌂☂️☔⛱️⚡❄️<br>☃️⛄☄️🔥💧🌊</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>以上的种种都是出自我经常使用的网站，这个网站的<code>emoji</code>都是免费的<br><a href="https://emojipedia.org/smileys">emoji网站</a></p>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 表情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>makdown语法</title>
      <link href="/2024/05/09/makdown-grammar/"/>
      <url>/2024/05/09/makdown-grammar/</url>
      
        <content type="html"><![CDATA[<h2 id="1-1-代码块"><a href="#1-1-代码块" class="headerlink" title="1.1 代码块"></a>1.1 代码块</h2><div class="tabs" id="标签"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="标签-1">语法</button><button type="button" class="tab " data-href="标签-2">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="标签-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\```Code</span><br><span class="line">#VSCode终端</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;信息&quot;;】</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="标签-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#VSCode终端</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;信息&quot;;】</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-2-多级标题"><a href="#1-2-多级标题" class="headerlink" title="1.2 多级标题"></a>1.2 多级标题</h2><div class="tabs" id="标题"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="标题-1">语法</button><button type="button" class="tab " data-href="标题-2">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="标题-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="标题-2"><h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><h5 id="H5"><a href="#H5" class="headerlink" title="H5"></a>H5</h5><h6 id="H6"><a href="#H6" class="headerlink" title="H6"></a>H6</h6></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-3-文字样式"><a href="#1-3-文字样式" class="headerlink" title="1.3 文字样式"></a>1.3 文字样式</h2><div class="tabs" id="文字样式"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="文字样式-1">样式</button><button type="button" class="tab " data-href="文字样式-2">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="文字样式-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>背景色<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="文字样式-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><font size="5">5号字</font><font face="黑体">黑体</font><font color="blue">蓝色</font><table><tr><td bgcolor="MistyRose">背景色</td></tr></table></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-4-引用"><a href="#1-4-引用" class="headerlink" title="1.4 引用"></a>1.4 引用</h2><div class="tabs" id="引用"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="引用-1">语法</button><button type="button" class="tab " data-href="引用-2">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="引用-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;SQL</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="引用-2"><blockquote><p> Java<br> Python<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p>SQL</p></blockquote><p>….</p></blockquote></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-5-分割线"><a href="#1-5-分割线" class="headerlink" title="1.5 分割线"></a>1.5 分割线</h2><div class="tabs" id="分割线"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分割线-1">语法</button><button type="button" class="tab " data-href="分割线-2">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分割线-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">*** </span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分割线-2"><hr><hr></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-6-图片"><a href="#1-6-图片" class="headerlink" title="1.6 图片"></a>1.6 图片</h2><div class="tabs" id="图片"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="图片-1">语法</button><button type="button" class="tab " data-href="图片-2">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="图片-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./makdown-grammar/toux.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://picimg.tanshao.cc/img/star1.jpg</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="图片-2"><h1 id="本地图片"><a href="#本地图片" class="headerlink" title="本地图片"></a>本地图片</h1><p><img src="toux.jpg" alt="示例图片" style="zoom:50%;"></p><h1 id="在线图片"><a href="#在线图片" class="headerlink" title="在线图片"></a>在线图片</h1><p><img src="https://picimg.tanshao.cc/img/star1.jpg" alt="code"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-7-表格"><a href="#1-7-表格" class="headerlink" title="1.7 表格"></a>1.7 表格</h2><div class="tabs" id="表格"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="表格-1">语法</button><button type="button" class="tab " data-href="表格-2">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="表格-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="表格-2"><div class="table-container"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-8-列表"><a href="#1-8-列表" class="headerlink" title="1.8 列表"></a>1.8 列表</h2><div class="tabs" id="列表"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="列表-1">语法</button><button type="button" class="tab " data-href="列表-2">演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="列表-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序列表内容</span><br><span class="line"><span class="bullet">+</span> 无序列表内容</span><br><span class="line"><span class="section">* 无序列表内容</span></span><br><span class="line"><span class="section">----------------</span></span><br><span class="line"><span class="bullet">1.</span> 有序列表内容</span><br><span class="line"><span class="bullet">2.</span> 有序列表内容</span><br><span class="line"><span class="section">3. 有序列表内容</span></span><br><span class="line"><span class="section">----------------</span></span><br><span class="line"><span class="bullet">*</span> 一级无序列表内容</span><br><span class="line"><span class="bullet">    *</span> 二级无序列表内容</span><br><span class="line"><span class="bullet">    *</span> 二级无序列表内容</span><br><span class="line"><span class="section">    * 二级无序列表内容</span></span><br><span class="line"><span class="section">----------------</span></span><br><span class="line"><span class="bullet">*</span> 一级无序列表内容</span><br><span class="line"><span class="bullet">    1.</span> 二级有序列表内容</span><br><span class="line"><span class="bullet">    2.</span> 二级有序列表内容</span><br><span class="line"><span class="bullet">    3.</span> 二级有序列表内容</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="列表-2"><ul><li>无序列表内容</li></ul><ul><li>无序列表内容</li></ul><ul><li>无序列表内容</li></ul><ol><li>有序列表内容</li><li>有序列表内容</li><li>有序列表内容</li></ol><hr><ul><li>一级无序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li></ul><hr><ul><li>一级无序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ul></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Makdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图床的&quot;第一次&quot;被我拿到了</title>
      <link href="/2024/05/08/picture-bed/"/>
      <url>/2024/05/08/picture-bed/</url>
      
        <content type="html"><![CDATA[<h1 id="1-基于Github仓库的图床"><a href="#1-基于Github仓库的图床" class="headerlink" title="1. 基于Github仓库的图床"></a>1. 基于Github仓库的图床</h1><div class="note info no-icon flat"><p>在我想着每次用图片的时候都要下载下来或者用别人的图片就很烦，我想着能不能把本地的图片传入我Github的仓库，结果网上一搜真的有那就是<strong>图床</strong></p><p>优点：</p><ol><li>很稳定不会无缘无故的就用不了图片，因为用的是自己的仓库和公共的托管平台</li><li>图片可以快速高效的实现更新</li><li>任何资源格式都可以</li></ol><p>缺点：</p><ol><li>每个仓库的容量有限</li></ol></div><h3 id="1-1-建立Github仓库"><a href="#1-1-建立Github仓库" class="headerlink" title="1.1 建立Github仓库"></a>1.1 建立Github仓库</h3><ol><li>进入<a href="https://github.com/"><code>Github官网</code></a>注册并登录自己的账号，到自己的主页，新建仓库点击<code>New Repository</code>创建自己的仓库。<br>仓库名字随意，描述加上一些特定的标识比较好加上 <code>README</code>文件较好，然后点击<code>Create Repository</code>创建仓库</li></ol><p><img src="https://picimg.tanshao.cc/img/01.png" alt></p><ol><li>让你的计算机与Github建立通信连接，在往github上push项目的时候，如果走https的方式，每次都需要输入账号密码，非常麻烦。而采用ssh的方式，就不再需要输入，只需要在github自己账号下配置一个ssh key即可。<br>首先我们需要打开我们下载的<strong>Git Bush</strong>再里面输入自己绑定Github的邮箱<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;自己Github绑定的邮箱&quot;</span><br></pre></td></tr></table></figure>接下来敲四下回车即可</li><li><p>根据一下路径进入 C盘符-&gt;用户-&gt;自己当前使用的用户名-&gt;.ssh文件夹<br>用任意文本编辑器打开<strong>id_rsa.pub</strong>文件，复制里面所有内容。<br>打开Github进入设置页面点击<strong>SSH and GPG key</strong> 我们新建一个ssh key<br>标题任意，只需要再<strong>KEY</strong>代码框中输入刚刚复制的代码，点击创建即可。</p></li><li><p>测试是否关联成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T -v git@github.com</span><br></pre></td></tr></table></figure><p>出现一下文字就是绑定成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hi WangRongsheng! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上使用的是<code>RSA公钥</code>，我们也可以使用<code>ed25519公钥</code>，具体教程在<a href="https://zhuanlan.zhihu.com/p/110413836"><code>这里</code></a></p></li><li><p>在本地任意位置创建一个文件夹，名字随意，打开<code>Git Bash</code>，然后输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone &quot;仓库链接&quot;</span><br></pre></td></tr></table></figure><p><img src="https://picimg.tanshao.cc/img/02.png" alt><br>来拷贝仓库到本地，一般来说不出意外的话就会发现自己的文件夹多了个<code>.gitignore</code>文件，这就代表成功了<br><img src="https://picimg.tanshao.cc/img/03.png" alt><br>此时我们最好创建多个文件夹放多个资源类型的文件，我现在想往仓库里面加两张图，直接就可以把图片复制到创建的文件夹里面了。<br><img src="https://picimg.tanshao.cc/img/04.png" alt><br>然后我们找到带有<code>README</code>文件的文件夹，在文件夹中打开<code>Git Bash</code>，然后依次输入下面的命令。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 提交更改</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新说明&quot;</span><br><span class="line"># 上传仓库</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>输入完命令后我们就可以在自己的<code>Github</code>仓库看到我们传入的图片<br><img src="https://picimg.tanshao.cc/img/05.png" alt><br>下次增删图片或者其他东西，就可以这样更新仓库了。</p></li></ol><h3 id="1-2-Vercel部署"><a href="#1-2-Vercel部署" class="headerlink" title="1.2 Vercel部署"></a>1.2 Vercel部署</h3><div class="note info no-icon flat"><p>我们直接访问Github仓库的资源是非常慢的，所以我们需要进行加速，我想到了之前用的Vercel,其优点非常明显,可以绑定自定义域名。</p></div><ol><li>进入<a href="https://vercel.com/"><code>Vercel</code></a>后我们新建项目<br><img src="https://picimg.tanshao.cc/img/06.png" alt><br>选择自己刚刚创建的仓库名以继续，进入项目控制台后，选择右上角<code>View Domains</code>添加的新域名，然后添加自己的二级域名，最后在你对应域名的解析控制台添加相对应的解析<br><img src="https://picimg.tanshao.cc/img/07.png" alt><br><img src="https://picimg.tanshao.cc/img/08.png" alt><br><img src="https://picimg.tanshao.cc/img/09.png" alt><br>最后通过<code>自定义域名+资源路径</code>即可访问对应资源，我这里是这样的<code>https://picimg.tanshao.cc/img/star1.jpg</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>托管以及自定义域名</title>
      <link href="/2024/05/06/server/"/>
      <url>/2024/05/06/server/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言:</p><blockquote><p>在我做完基于GitHub的动态博客后，我想着能不能将博客进行托管，今天就突发奇想查了一下果然可以，Vercel进行托管，这个网站本身就是基于Hexo引擎模块开发的，vercel类似于github page，但远比github page强大，最重要的是我可以自定义域名！！！。</p></blockquote></blockquote><h3 id="进入网站绑定仓库"><a href="#进入网站绑定仓库" class="headerlink" title="进入网站绑定仓库"></a>进入网站绑定仓库</h3><p><strong>首先我们需要进入网站</strong><br> <a href="https://vercel.com/">vercel</a><br>注册一个账号绑定GitHub账号，完成后会出现刚刚关联的GitHub账号里面的仓库<br><img src="1.png" alt><br>选择我们需要上传的GitHub仓库，配置项目名时要注意，项目名字只能是数字，字母和连字符<br>填写完后点击部署<br><img src="2.png" alt></p><h3 id="域名的自定义"><a href="#域名的自定义" class="headerlink" title="域名的自定义"></a>域名的自定义</h3><p>点击右上角的View Domains如果没有这个按钮，我们可以点击头像进入设置<br><img src="3.png" alt><br>进入后我们可以看到Vercel已经分配了一个二级域名，我们可以通过这个域名访问我们自己的博客。<br><strong>当然这个不是我的作风，如果我可以自定义域名的话，是不是更加方便了呢？</strong><br>所以我选择绑定自己的域名，因此我决定购买一个属于自己的域名。<br>通过我的寻找终于找到了一个性价比极高的网站<strong>NameSilo</strong>最重要的是可以用<strong>支付宝</strong><br>我因此进入了这个网站<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.namesilo.com/</span><br></pre></td></tr></table></figure><br><img src="4.png" alt><br>首先还是老生常谈的注册/登录<br>然后在搜索框里面输入自己想要的域名<br><img src="5.png" alt><br>购买后我们进入刚刚Vercel的域名设置，添加自己刚刚购买的域名<br>这个时候我们需要在域名处添加一条解析记录(如果你添加的是一级域名那将需要两条解析记录)<br>我们需要进入刚刚购买域名的网站<br>进入个人页面：<br><img src="6.png" alt><br>点击<strong>Domain Manager</strong><br>此时我们进入到了这个页面<br><img src="7.png" alt><br>选择<strong>Options</strong>下面第五个图标<strong>Manager DNS for this Domain</strong><br>此时我们就进入到了配置DNS的界面：<br><img src="8.png" alt><br>此时我们需要根据另一边的<mark>vercel</mark>来选择类型<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A|AAAA|CNAME|MX|TXT/SPF|SRV|CAA</span><br></pre></td></tr></table></figure><br>在记录类型，主机记录和记录值这三项分别填入Vercel给出的值，其他默认即可<br>添加完成后等待10秒左右，Vercel就显示成功解析，这时我们可以通过自己绑定的域名访问网站。</p><h3 id="最后的配置"><a href="#最后的配置" class="headerlink" title="最后的配置"></a>最后的配置</h3><p>我们用Vscode打开本地博客的配置文件<mark>.config_yml</mark> 在配置文件中的URL选项换上我们刚刚自定义的域名<br><img src="9.png" alt></p><p><strong>此时此刻我们的自定义域名就成功了</strong></p>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客图片问题</title>
      <link href="/2024/05/05/images/"/>
      <url>/2024/05/05/images/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言:</p><blockquote><p>在上一个文章创建期间我遇到了图片无法显示的问题，通过查找大量的方法，最终找到了一个最佳的方法</p></blockquote></blockquote><h3 id="修改配置与安装插件"><a href="#修改配置与安装插件" class="headerlink" title="修改配置与安装插件"></a>修改配置与安装插件</h3><p>我们需要修改站点的配置 <strong>_config.yml</strong><br>将<strong>post_asset_folder</strong>设置为<strong>true</strong>如下图：<br><img src="1.png" alt><br>然后安装插件：<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-asset-image --save</span><br></pre></td></tr></table></figure></p><h3 id="修复静态图片路径"><a href="#修复静态图片路径" class="headerlink" title="修复静态图片路径"></a>修复静态图片路径</h3><p>在生成预览时，依旧无法正常查看图片<br>我们需要到<strong>node_modules</strong>中找到<strong>hexo-asset-image</strong>，并将58,59行的<br><img src="2.png" alt><br>修改为:<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(this).attr(&#x27;src&#x27;, + src);</span><br><span class="line">console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;  + src);</span><br></pre></td></tr></table></figure><br>如下图：<br><img src="3.png" alt></p><p>不出意外的话，图片就可以正常显示了</p>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>创建博客</title>
      <link href="/2024/05/02/blogs/"/>
      <url>/2024/05/02/blogs/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言:</p><blockquote><p>由于学的东西太多了需要整理，所以我创建了这个博客，在创建博客时出现了很多问题，由此记录</p></blockquote></blockquote><h3 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h3><p><strong>首先我们需要做好工具的准备(点击链接即可进入官网安装)：</strong></p><ul><li><a href="https://nodejs.org/en">nodejs</a></li><li><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git">git</a></li></ul><p><strong>安装完成后我们需要检测是否安装成功，管理员运行cmd，依次输入以下代码</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm  -v(node附带的)</span><br><span class="line">git  -v</span><br></pre></td></tr></table></figure><br> <strong>下载Hexo</strong><br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p><h3 id="搭建仓库"><a href="#搭建仓库" class="headerlink" title="搭建仓库"></a>搭建仓库</h3><p><strong>成功下载好工具之后，我们开始搭建由GitHub存储静态页面的仓库</strong><br>首先注册/登入 <u><a href="https://github.com/">Github</a><u></u></u></p><p>在登入/注册后左上角有一个<strong>new</strong>点击后输入Repository name / 点击Create repository,(注意：用户名.github.io)勾选Add a README file 再点击 Create repository即可创建仓库。<br><img src="aa.png" alt></p><h3 id="SSH-Key-配置"><a href="#SSH-Key-配置" class="headerlink" title="SSH Key 配置"></a>SSH Key 配置</h3><p>在往github上push项目的时候，如果走https的方式，每次都需要输入账号密码，非常麻烦。而采用ssh的方式，就不再需要输入，只需要在github自己账号下配置一个ssh key即可。<br>1.首先我们需要打开我们下载的<strong>Git Bush</strong>再里面输入自己绑定Github的邮箱<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;自己Github绑定的邮箱&quot;</span><br></pre></td></tr></table></figure><br>接下来敲四下回车即可</p><p>2.根据一下路径进入 C盘符-&gt;用户-&gt;自己当前使用的用户名-&gt;.ssh文件夹<br>用任意文本编辑器打开<strong>id_rsa.pub</strong>文件，复制里面所有内容。</p><p>打开Github进入设置页面点击<strong>SSH and GPG key</strong> 我们新建一个ssh key<br>标题任意，只需要再<strong>KEY</strong>代码框中输入刚刚复制的代码，点击创建即可。</p><p><strong>测试是否关联成功</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T -v git@github.com</span><br></pre></td></tr></table></figure><br>出现一下文字就是绑定成功<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hi WangRongsheng! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><p>在任意位置添加文件夹用于放置博客文件(如果创建后初始化错误那就是你当前的权限没有管理员的授权需要切换,作者踩过雷)</p><p>再文件夹中打开<strong>Git Bash</strong>输入<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><br> 进行初始化,如果不行就试试<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npx hexo init</span><br></pre></td></tr></table></figure><br> 如果还是不行那你就是跟作者踩了同一个坑(权限问题，需要以管理员身份打开)<br> 第一种<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo install</span><br></pre></td></tr></table></figure><br> 第二种<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npx hexo install</span><br></pre></td></tr></table></figure><br> 如果下载很慢的话我们可以试试使用cnpm<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.npmmirror.com</span><br></pre></td></tr></table></figure><br> 检查是否安装成功<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><br>安装成功之后，以后安装依赖包的方式和npm的是一样的，只是npm的命令换成是cnpm就可以了<br><img src="hex.png" alt></p><p>下载完成后我们使用以下代码生成本地的静态文件<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm hexo g</span><br></pre></td></tr></table></figure><br>本地部署<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm hexo s</span><br></pre></td></tr></table></figure></p><h3 id="上线博客"><a href="#上线博客" class="headerlink" title="上线博客"></a>上线博客</h3><p>  在我们生成的本地Hexo中我们可以发现有名为<strong>_config.yml</strong>的配置文件，用记事本或者VScode打开<br>  拉到最下面将deploy后面全部删掉，复制这段<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: git</span><br><span class="line">repository: </span><br><span class="line">branch: main</span><br></pre></td></tr></table></figure><br>(每一行前面有两个空格不要删除，每个冒号后面也有空格不要删除！)<br>我们进入自己的GitHub仓库点击<strong>Code</strong>复制仓库链接粘贴到<strong>repository</strong>后面保存后退出。</p><p>我们再次使用<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm hexo g</span><br></pre></td></tr></table></figure><br>上传<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm hexo d</span><br></pre></td></tr></table></figure><br>如果你是第一次使用那么需要填入一些配置<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;自己的邮箱&quot;</span><br></pre></td></tr></table></figure><br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;自己的用户名&quot;</span><br></pre></td></tr></table></figure><br>如果不是第一次，并且出现<strong>request to <a href="https://registry.nom.taobao.org/hexo">https://registry.nom.taobao.org/hexo</a> failed</strong>那么恭喜你跟作者又是一样的错误，这个时候我们需要修改一下镜像<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.npmmirror.com</span><br></pre></td></tr></table></figure><br>完成后我们继续上传输入<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm hexo d</span><br></pre></td></tr></table></figure><br>此时会弹出一个GitHub窗口，我们进行登录，等待片刻后我们就可以输入访问链接<br> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名.githun.io</span><br></pre></td></tr></table></figure><br>此时此刻，我们就已经完成了基于github动态的博客！！！！</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
